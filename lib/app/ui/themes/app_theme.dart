import 'package:flutter/material.dart';
import 'package:smaservicos/app/utils/scale_sizer.dart';

part 'utils.g.dart';
part 'custom_colors.g.dart';
part 'custom_theme_extension.g.dart';

class AppTheme {

  static ColorScheme lightScheme() {
    return const ColorScheme(
      brightness: Brightness.light,
      primary: Color(0xff1e3d90),
      surfaceTint: Color(0xff3e5aad),
      onPrimary: Color(0xffffffff),
      primaryContainer: Color(0xff3a56a9),
      onPrimaryContainer: Color(0xffc6d2ff),
      secondary: Color(0xff00005e),
      onSecondary: Color(0xffffffff),
      secondaryContainer: Color(0xff1a1f71),
      onSecondaryContainer: Color(0xff858be0),
      tertiary: Color(0xff7f5700),
      onTertiary: Color(0xffffffff),
      tertiaryContainer: Color(0xfffcb52e),
      onTertiaryContainer: Color(0xff6b4900),
      error: Color(0xffb12129),
      onError: Color(0xffffffff),
      errorContainer: Color(0xffd43c3e),
      onErrorContainer: Color(0xfffffbff),
      surface: Color(0xfffcf9f8),
      onSurface: Color(0xff1b1c1c),
      onSurfaceVariant: Color(0xff44474a),
      outline: Color(0xff74777b),
      outlineVariant: Color(0xffc4c7cb),
      shadow: Color(0xff000000),
      scrim: Color(0xff000000),
      inverseSurface: Color(0xff303030),
      inversePrimary: Color(0xffb5c4ff),
      primaryFixed: Color(0xffdbe1ff),
      onPrimaryFixed: Color(0xff00164d),
      primaryFixedDim: Color(0xffb5c4ff),
      onPrimaryFixedVariant: Color(0xff234193),
      secondaryFixed: Color(0xffe0e0ff),
      onSecondaryFixed: Color(0xff060963),
      secondaryFixedDim: Color(0xffbec2ff),
      onSecondaryFixedVariant: Color(0xff383e8e),
      tertiaryFixed: Color(0xffffdcc4),
      onTertiaryFixed: Color(0xff2f1400),
      tertiaryFixedDim: Color(0xffffb781),
      onTertiaryFixedVariant: Color(0xff703800),
      surfaceDim: Color(0xffdcd9d9),
      surfaceBright: Color(0xfffcf9f8),
      surfaceContainerLowest: Color(0xffffffff),
      surfaceContainerLow: Color(0xfff6f3f2),
      surfaceContainer: Color(0xfff0eded),
      surfaceContainerHigh: Color(0xffeae7e7),
      surfaceContainerHighest: Color(0xffe4e2e1),
    );
  }

  ThemeData light(BuildContext context) {
    return theme(lightScheme(), context);
  }

  static ColorScheme lightMediumContrastScheme() {
    return const ColorScheme(
      brightness: Brightness.light,
      primary: Color(0xff092f82),
      surfaceTint: Color(0xff3e5aad),
      onPrimary: Color(0xffffffff),
      primaryContainer: Color(0xff3a56a9),
      onPrimaryContainer: Color(0xffffffff),
      secondary: Color(0xff00005e),
      onSecondary: Color(0xffffffff),
      secondaryContainer: Color(0xff1a1f71),
      onSecondaryContainer: Color(0xffacb1ff),
      tertiary: Color(0xff4a3100),
      onTertiary: Color(0xffffffff),
      tertiaryContainer: Color(0xff926400),
      onTertiaryContainer: Color(0xffffffff),
      error: Color(0xff73000f),
      onError: Color(0xffffffff),
      errorContainer: Color(0xffca3438),
      onErrorContainer: Color(0xffffffff),
      surface: Color(0xfffcf9f8),
      onSurface: Color(0xff111111),
      onSurfaceVariant: Color(0xff33373a),
      outline: Color(0xff4f5356),
      outlineVariant: Color(0xff6a6d71),
      shadow: Color(0xff000000),
      scrim: Color(0xff000000),
      inverseSurface: Color(0xff303030),
      inversePrimary: Color(0xffb5c4ff),
      primaryFixed: Color(0xff4d69bd),
      onPrimaryFixed: Color(0xffffffff),
      primaryFixedDim: Color(0xff3350a2),
      onPrimaryFixedVariant: Color(0xffffffff),
      secondaryFixed: Color(0xff5f65b8),
      onSecondaryFixed: Color(0xffffffff),
      secondaryFixedDim: Color(0xff474c9d),
      onSecondaryFixedVariant: Color(0xffffffff),
      tertiaryFixed: Color(0xffa85700),
      onTertiaryFixed: Color(0xffffffff),
      tertiaryFixedDim: Color(0xff844300),
      onTertiaryFixedVariant: Color(0xffffffff),
      surfaceDim: Color(0xffc8c6c6),
      surfaceBright: Color(0xfffcf9f8),
      surfaceContainerLowest: Color(0xffffffff),
      surfaceContainerLow: Color(0xfff6f3f2),
      surfaceContainer: Color(0xffeae7e7),
      surfaceContainerHigh: Color(0xffdfdcdc),
      surfaceContainerHighest: Color(0xffd3d1d1),
    );
  }

  ThemeData lightMediumContrast(BuildContext context) {
    return theme(lightMediumContrastScheme(), context);
  }

  static ColorScheme lightHighContrastScheme() {
    return const ColorScheme(
      brightness: Brightness.light,
      primary: Color(0xff002571),
      surfaceTint: Color(0xff3e5aad),
      onPrimary: Color(0xffffffff),
      primaryContainer: Color(0xff264396),
      onPrimaryContainer: Color(0xffffffff),
      secondary: Color(0xff00005e),
      onSecondary: Color(0xffffffff),
      secondaryContainer: Color(0xff1a1f71),
      onSecondaryContainer: Color(0xffe2e1ff),
      tertiary: Color(0xff3d2800),
      onTertiary: Color(0xffffffff),
      tertiaryContainer: Color(0xff634300),
      onTertiaryContainer: Color(0xffffffff),
      error: Color(0xff60000b),
      onError: Color(0xffffffff),
      errorContainer: Color(0xff960619),
      onErrorContainer: Color(0xffffffff),
      surface: Color(0xfffcf9f8),
      onSurface: Color(0xff000000),
      onSurfaceVariant: Color(0xff000000),
      outline: Color(0xff292d30),
      outlineVariant: Color(0xff46494d),
      shadow: Color(0xff000000),
      scrim: Color(0xff000000),
      inverseSurface: Color(0xff303030),
      inversePrimary: Color(0xffb5c4ff),
      primaryFixed: Color(0xff264396),
      onPrimaryFixed: Color(0xffffffff),
      primaryFixedDim: Color(0xff022b7e),
      onPrimaryFixedVariant: Color(0xffffffff),
      secondaryFixed: Color(0xff3b4091),
      onSecondaryFixed: Color(0xffffffff),
      secondaryFixedDim: Color(0xff232879),
      onSecondaryFixedVariant: Color(0xffffffff),
      tertiaryFixed: Color(0xff733a00),
      onTertiaryFixed: Color(0xffffffff),
      tertiaryFixedDim: Color(0xff522700),
      onTertiaryFixedVariant: Color(0xffffffff),
      surfaceDim: Color(0xffbab8b8),
      surfaceBright: Color(0xfffcf9f8),
      surfaceContainerLowest: Color(0xffffffff),
      surfaceContainerLow: Color(0xfff3f0f0),
      surfaceContainer: Color(0xffe4e2e1),
      surfaceContainerHigh: Color(0xffd6d4d3),
      surfaceContainerHighest: Color(0xffc8c6c6),
    );
  }

  ThemeData lightHighContrast(BuildContext context) {
    return theme(lightHighContrastScheme(), context);
  }

  static ColorScheme darkScheme() {
    return const ColorScheme(
      brightness: Brightness.dark,
      primary: Color(0xffb5c4ff),
      surfaceTint: Color(0xffb5c4ff),
      onPrimary: Color(0xff00297b),
      primaryContainer: Color(0xff3a56a9),
      onPrimaryContainer: Color(0xffc6d2ff),
      secondary: Color(0xffbec2ff),
      onSecondary: Color(0xff202677),
      secondaryContainer: Color(0xff1a1f71),
      onSecondaryContainer: Color(0xff858be0),
      tertiary: Color(0xffffd89e),
      onTertiary: Color(0xff432c00),
      tertiaryContainer: Color(0xfffcb52e),
      onTertiaryContainer: Color(0xff6b4900),
      error: Color(0xffffb3ae),
      onError: Color(0xff68000c),
      errorContainer: Color(0xfffb5857),
      onErrorContainer: Color(0xff4c0007),
      surface: Color(0xff131313),
      onSurface: Color(0xffe4e2e1),
      onSurfaceVariant: Color(0xffc4c7cb),
      outline: Color(0xff8e9195),
      outlineVariant: Color(0xff44474a),
      shadow: Color(0xff000000),
      scrim: Color(0xff000000),
      inverseSurface: Color(0xffe4e2e1),
      inversePrimary: Color(0xff3e5aad),
      primaryFixed: Color(0xffdbe1ff),
      onPrimaryFixed: Color(0xff00164d),
      primaryFixedDim: Color(0xffb5c4ff),
      onPrimaryFixedVariant: Color(0xff234193),
      secondaryFixed: Color(0xffe0e0ff),
      onSecondaryFixed: Color(0xff060963),
      secondaryFixedDim: Color(0xffbec2ff),
      onSecondaryFixedVariant: Color(0xff383e8e),
      tertiaryFixed: Color(0xffffdcc4),
      onTertiaryFixed: Color(0xff2f1400),
      tertiaryFixedDim: Color(0xffffb781),
      onTertiaryFixedVariant: Color(0xff703800),
      surfaceDim: Color(0xff131313),
      surfaceBright: Color(0xff393939),
      surfaceContainerLowest: Color(0xff0e0e0e),
      surfaceContainerLow: Color(0xff1b1c1c),
      surfaceContainer: Color(0xff1f2020),
      surfaceContainerHigh: Color(0xff2a2a2a),
      surfaceContainerHighest: Color(0xff353535),
    );
  }

  ThemeData dark(BuildContext context) {
    return theme(darkScheme(), context);
  }

  static ColorScheme darkMediumContrastScheme() {
    return const ColorScheme(
      brightness: Brightness.dark,
      primary: Color(0xffd3dbff),
      surfaceTint: Color(0xffb5c4ff),
      onPrimary: Color(0xff001f63),
      primaryContainer: Color(0xff728de3),
      onPrimaryContainer: Color(0xff000000),
      secondary: Color(0xffd9d9ff),
      onSecondary: Color(0xff14186c),
      secondaryContainer: Color(0xff8389de),
      onSecondaryContainer: Color(0xff000000),
      tertiary: Color(0xffffd89e),
      onTertiary: Color(0xff372300),
      tertiaryContainer: Color(0xfffcb52e),
      onTertiaryContainer: Color(0xff472e00),
      error: Color(0xffffd2ce),
      onError: Color(0xff540008),
      errorContainer: Color(0xfffb5857),
      onErrorContainer: Color(0xff000000),
      surface: Color(0xff131313),
      onSurface: Color(0xffffffff),
      onSurfaceVariant: Color(0xffdadce0),
      outline: Color(0xffafb2b6),
      outlineVariant: Color(0xff8e9094),
      shadow: Color(0xff000000),
      scrim: Color(0xff000000),
      inverseSurface: Color(0xffe4e2e1),
      inversePrimary: Color(0xff244295),
      primaryFixed: Color(0xffdbe1ff),
      onPrimaryFixed: Color(0xff000d36),
      primaryFixedDim: Color(0xffb5c4ff),
      onPrimaryFixedVariant: Color(0xff092f82),
      secondaryFixed: Color(0xffe0e0ff),
      onSecondaryFixed: Color(0xff00004e),
      secondaryFixedDim: Color(0xffbec2ff),
      onSecondaryFixedVariant: Color(0xff272c7d),
      tertiaryFixed: Color(0xffffdcc4),
      onTertiaryFixed: Color(0xff200c00),
      tertiaryFixedDim: Color(0xffffb781),
      onTertiaryFixedVariant: Color(0xff572a00),
      surfaceDim: Color(0xff131313),
      surfaceBright: Color(0xff454444),
      surfaceContainerLowest: Color(0xff070707),
      surfaceContainerLow: Color(0xff1d1e1e),
      surfaceContainer: Color(0xff282828),
      surfaceContainerHigh: Color(0xff333232),
      surfaceContainerHighest: Color(0xff3e3d3e),
    );
  }

  ThemeData darkMediumContrast(BuildContext context) {
    return theme(darkMediumContrastScheme(), context);
  }

  static ColorScheme darkHighContrastScheme() {
    return const ColorScheme(
      brightness: Brightness.dark,
      primary: Color(0xffeeefff),
      surfaceTint: Color(0xffb5c4ff),
      onPrimary: Color(0xff000000),
      primaryContainer: Color(0xffafc0ff),
      onPrimaryContainer: Color(0xff000829),
      secondary: Color(0xfff0eeff),
      onSecondary: Color(0xff000000),
      secondaryContainer: Color(0xffbabdff),
      onSecondaryContainer: Color(0xff00003d),
      tertiary: Color(0xffffedd8),
      onTertiary: Color(0xff000000),
      tertiaryContainer: Color(0xfffcb52e),
      onTertiaryContainer: Color(0xff120900),
      error: Color(0xffffecea),
      onError: Color(0xff000000),
      errorContainer: Color(0xffffaea9),
      onErrorContainer: Color(0xff220001),
      surface: Color(0xff131313),
      onSurface: Color(0xffffffff),
      onSurfaceVariant: Color(0xffffffff),
      outline: Color(0xffeef0f4),
      outlineVariant: Color(0xffc0c3c7),
      shadow: Color(0xff000000),
      scrim: Color(0xff000000),
      inverseSurface: Color(0xffe4e2e1),
      inversePrimary: Color(0xff244295),
      primaryFixed: Color(0xffdbe1ff),
      onPrimaryFixed: Color(0xff000000),
      primaryFixedDim: Color(0xffb5c4ff),
      onPrimaryFixedVariant: Color(0xff000d36),
      secondaryFixed: Color(0xffe0e0ff),
      onSecondaryFixed: Color(0xff000000),
      secondaryFixedDim: Color(0xffbec2ff),
      onSecondaryFixedVariant: Color(0xff00004e),
      tertiaryFixed: Color(0xffffdcc4),
      onTertiaryFixed: Color(0xff000000),
      tertiaryFixedDim: Color(0xffffb781),
      onTertiaryFixedVariant: Color(0xff200c00),
      surfaceDim: Color(0xff131313),
      surfaceBright: Color(0xff505050),
      surfaceContainerLowest: Color(0xff000000),
      surfaceContainerLow: Color(0xff1f2020),
      surfaceContainer: Color(0xff303030),
      surfaceContainerHigh: Color(0xff3c3b3b),
      surfaceContainerHighest: Color(0xff474747),
    );
  }

  ThemeData darkHighContrast(BuildContext context) {
    return theme(darkHighContrastScheme(), context);
  }

  ThemeData theme(ColorScheme colorScheme, BuildContext context) =>
      ThemeData(
        useMaterial3: true,
        brightness: colorScheme.brightness,
        colorScheme: colorScheme,
        textTheme: _getTextTheme(colorScheme).apply(fontSizeFactor: ScaleSize.textScaleFactor(context)),
        radioTheme: _getRadioTheme(colorScheme),
        elevatedButtonTheme: _getElevatedButtonTheme(colorScheme),
        inputDecorationTheme: _getInputDecorationTheme(colorScheme),
        scaffoldBackgroundColor: colorScheme.surface,
        extensions: <ThemeExtension<CustomThemeExtension>>[
          CustomThemeExtension(
            success: success,
            info: info,
            neutralDark: neutralDark,
          ),
        ],
        canvasColor: colorScheme.surface,
      );
}